services:
  web:
    image: ghcr.io/leobitto/arnia:latest # Utilizza l'immagine presente nel registry
    container_name: web
    command: gunicorn base.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 90
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    env_file:
      - ./config/django.cfg
    depends_on:
      - db
      - db_gold
    ports:
      - 8000:8000
    networks:
      app_network:
        ipv4_address: 192.168.100.2

  djangoq:
    image: ghcr.io/leobitto/arnia:latest # Utilizza l'immagine presente nel registry
    container_name: djangoq
    command: python manage.py qcluster
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    env_file:
      - ./config/django.cfg
    depends_on:
      - db
      - db_gold

    networks:
      app_network:
        ipv4_address: 192.168.100.6

  db:
    image: postgres:15
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./config/db.cfg
    networks:
      app_network:
        ipv4_address: 192.168.100.3
  
  db_gold:
    image: postgres:15
    container_name: postgres_db_gold
    volumes:
      - postgres_data_gold:/var/lib/postgresql/data/
    env_file:
      - ./config/gold.cfg
    networks:
      app_network:
        ipv4_address: 192.168.100.4

volumes:
  static_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/web/static
  media_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/web/media
  postgres_data:
  postgres_data_gold:


networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24
